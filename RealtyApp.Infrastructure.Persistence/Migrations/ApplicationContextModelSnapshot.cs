// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealtyApp.Infrastructure.Persistence.Contexts;

namespace RealtyApp.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RealtyApp.Core.Domain.Entities.FavoriteImmovable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImmovableAssetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImmovableAssetId");

                    b.ToTable("FavoriteImmovables");
                });

            modelBuilder.Entity("RealtyApp.Core.Domain.Entities.ImmovableAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BathroomQuantity")
                        .HasColumnType("float");

                    b.Property<double>("BedroomQuantity")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImmovableAssetTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Meters")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SellTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UrlImage01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImage02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImage03")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImage04")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImmovableAssetTypeId");

                    b.HasIndex("SellTypeId");

                    b.ToTable("ImmovableAssets");
                });

            modelBuilder.Entity("RealtyApp.Core.Domain.Entities.ImmovableAssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ImmovableAssetTypes");
                });

            modelBuilder.Entity("RealtyApp.Core.Domain.Entities.Improvement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Improvements");
                });

            modelBuilder.Entity("RealtyApp.Core.Domain.Entities.Improvement_Immovable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImmovableAssetId")
                        .HasColumnType("int");

                    b.Property<int>("ImprovementId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImmovableAssetId");

                    b.HasIndex("ImprovementId");

                    b.ToTable("Improvement_Immovables");
                });

            modelBuilder.Entity("RealtyApp.Core.Domain.Entities.SellType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SellTypes");
                });

            modelBuilder.Entity("RealtyApp.Core.Domain.Entities.FavoriteImmovable", b =>
                {
                    b.HasOne("RealtyApp.Core.Domain.Entities.ImmovableAsset", "ImmovableAsset")
                        .WithMany("FavoriteImmovables")
                        .HasForeignKey("ImmovableAssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImmovableAsset");
                });

            modelBuilder.Entity("RealtyApp.Core.Domain.Entities.ImmovableAsset", b =>
                {
                    b.HasOne("RealtyApp.Core.Domain.Entities.ImmovableAssetType", "ImmovableAssetType")
                        .WithMany("ImmovableAssets")
                        .HasForeignKey("ImmovableAssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealtyApp.Core.Domain.Entities.SellType", "SellType")
                        .WithMany("ImmovableAssets")
                        .HasForeignKey("SellTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImmovableAssetType");

                    b.Navigation("SellType");
                });

            modelBuilder.Entity("RealtyApp.Core.Domain.Entities.Improvement_Immovable", b =>
                {
                    b.HasOne("RealtyApp.Core.Domain.Entities.ImmovableAsset", "ImmovableAsset")
                        .WithMany("Improvement_Immovables")
                        .HasForeignKey("ImmovableAssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealtyApp.Core.Domain.Entities.Improvement", "Improvement")
                        .WithMany("Improvement_Immovables")
                        .HasForeignKey("ImprovementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImmovableAsset");

                    b.Navigation("Improvement");
                });

            modelBuilder.Entity("RealtyApp.Core.Domain.Entities.ImmovableAsset", b =>
                {
                    b.Navigation("FavoriteImmovables");

                    b.Navigation("Improvement_Immovables");
                });

            modelBuilder.Entity("RealtyApp.Core.Domain.Entities.ImmovableAssetType", b =>
                {
                    b.Navigation("ImmovableAssets");
                });

            modelBuilder.Entity("RealtyApp.Core.Domain.Entities.Improvement", b =>
                {
                    b.Navigation("Improvement_Immovables");
                });

            modelBuilder.Entity("RealtyApp.Core.Domain.Entities.SellType", b =>
                {
                    b.Navigation("ImmovableAssets");
                });
#pragma warning restore 612, 618
        }
    }
}
